#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from aiogram import types
from bot import dp

import state
from config import ADMIN_USERNAME
from reactions import restart_reactions

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

def is_admin(message: types.Message) -> bool:
    return message.from_user.username == ADMIN_USERNAME

# –°–±–æ—Ä –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message_handler(content_types=types.ContentType.TEXT)
async def collect_messages(message: types.Message):
    if (message.from_user.is_bot
        or message.text.startswith("/")
        or (message.from_user.username and message.from_user.username in state.ignored_users)):
        return
    state.message_pool.append((message.chat.id, message.message_id))

# –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@dp.message_handler(commands=['add_reaction'])
async def cmd_add_reaction(message: types.Message):
    if not is_admin(message):
        return
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_reaction üòÇ")
        return
    emoji = parts[1].strip()
    if emoji in state.reactions:
        await message.reply("–≠–º–æ–¥–∑–∏ —É–∂–µ –≤ –ø—É–ª–µ.")
    else:
        state.reactions.append(emoji)
        await message.reply(f"–î–æ–±–∞–≤–ª–µ–Ω–æ {emoji} –≤ –ø—É–ª —Ä–µ–∞–∫—Ü–∏–π.")

@dp.message_handler(commands=['remove_reaction'])
async def cmd_remove_reaction(message: types.Message):
    if not is_admin(message):
        return
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /remove_reaction üòÇ")
        return
    emoji = parts[1].strip()
    if emoji in state.reactions:
        state.reactions.remove(emoji)
        await message.reply(f"–£–±—Ä–∞–Ω–æ {emoji} –∏–∑ –ø—É–ª–∞ —Ä–µ–∞–∫—Ü–∏–π.")
    else:
        await message.reply("–≠–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø—É–ª–µ.")

@dp.message_handler(commands=['list_reactions'])
async def cmd_list_reactions(message: types.Message):
    if not is_admin(message):
        return
    await message.reply("–ü—É–ª —Ä–µ–∞–∫—Ü–∏–π: " + ", ".join(state.reactions))

@dp.message_handler(commands=['set_interval'])
async def cmd_set_interval(message: types.Message):
    if not is_admin(message):
        return
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2 or not parts[1].isdigit():
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /set_interval <—Å–µ–∫—É–Ω–¥—ã>")
        return
    interval_val = int(parts[1])
    if interval_val < 1:
        await message.reply("–ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º.")
        return
    state.interval_seconds = interval_val
    await message.reply(f"–ò–Ω—Ç–µ—Ä–≤–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {interval_val} —Å–µ–∫—É–Ω–¥.")

@dp.message_handler(commands=['ignore_user'])
async def cmd_ignore_user(message: types.Message):
    if not is_admin(message):
        return
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ignore_user @username")
        return
    username = parts[1].lstrip("@")
    state.ignored_users.add(username)
    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç.")

@dp.message_handler(commands=['unignore_user'])
async def cmd_unignore_user(message: types.Message):
    if not is_admin(message):
        return
    parts = message.text.split(maxsplit=1)
    if len(parts) < 2:
        await message.reply("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /unignore_user @username")
        return
    username = parts[1].lstrip("@")
    if username in state.ignored_users:
        state.ignored_users.remove(username)
        await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} —É–¥–∞–ª–µ–Ω –∏–∑ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç–∞.")
    else:
        await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ—Ç –≤ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç–µ.")

@dp.message_handler(commands=['list_ignored'])
async def cmd_list_ignored(message: types.Message):
    if not is_admin(message):
        return
    if state.ignored_users:
        await message.reply("–ò–≥–Ω–æ—Ä-–ª–∏—Å—Ç: " + ", ".join("@" + u for u in state.ignored_users))
    else:
        await message.reply("–ò–≥–Ω–æ—Ä-–ª–∏—Å—Ç –ø—É—Å—Ç.")

@dp.message_handler(commands=['restart_reactions'])
async def cmd_restart_reactions(message: types.Message):
    if not is_admin(message):
        return
    await restart_reactions()
    await message.reply("–¢–∞–π–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.") 